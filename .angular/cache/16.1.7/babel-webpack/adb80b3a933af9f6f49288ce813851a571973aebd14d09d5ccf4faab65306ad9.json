{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class RatingStarsPipe {\n  transform(rate) {\n    // Validate the rate input\n    if (rate < 0 || rate > 5) {\n      throw new Error('Rating must be between 0 and 5');\n    }\n    // Round the rate to the nearest half\n    const roundedRate = Math.round(rate * 2) / 2;\n    // Define Unicode characters for stars\n    const filledStar = '★';\n    const halfStar = '½';\n    const emptyStar = '☆';\n    // Determine the number of filled, half, and empty stars\n    const filledStars = Math.floor(roundedRate);\n    const hasHalfStar = roundedRate - filledStars >= 0.5;\n    const emptyStars = 5 - filledStars - (hasHalfStar ? 1 : 0);\n    // Construct the rendered stars string\n    let starsStr = filledStar.repeat(filledStars);\n    if (hasHalfStar) {\n      starsStr += halfStar;\n    }\n    starsStr += emptyStar.repeat(emptyStars);\n    return starsStr;\n  }\n}\nRatingStarsPipe.ɵfac = function RatingStarsPipe_Factory(t) {\n  return new (t || RatingStarsPipe)();\n};\nRatingStarsPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"ratingStars\",\n  type: RatingStarsPipe,\n  pure: true\n});","map":{"version":3,"names":["RatingStarsPipe","transform","rate","Error","roundedRate","Math","round","filledStar","halfStar","emptyStar","filledStars","floor","hasHalfStar","emptyStars","starsStr","repeat","pure"],"sources":["/Users/jacobovasquez/javz/amazon-store/fe-store/src/app/gallery/components/card/rating-stars.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'ratingStars'\n})\nexport class RatingStarsPipe implements PipeTransform {\n  transform(rate: number): string {\n    // Validate the rate input\n    if (rate < 0 || rate > 5) {\n      throw new Error('Rating must be between 0 and 5');\n    }\n\n    // Round the rate to the nearest half\n    const roundedRate = Math.round(rate * 2) / 2;\n\n    // Define Unicode characters for stars\n    const filledStar = '★';\n    const halfStar = '½';\n    const emptyStar = '☆';\n\n    // Determine the number of filled, half, and empty stars\n    const filledStars = Math.floor(roundedRate);\n    const hasHalfStar = roundedRate - filledStars >= 0.5;\n    const emptyStars = 5 - filledStars - (hasHalfStar ? 1 : 0);\n\n    // Construct the rendered stars string\n    let starsStr = filledStar.repeat(filledStars);\n    if (hasHalfStar) {\n      starsStr += halfStar;\n    }\n    starsStr += emptyStar.repeat(emptyStars);\n\n    return starsStr;\n  }\n}\n"],"mappings":";AAKA,OAAM,MAAOA,eAAe;EAC1BC,SAASA,CAACC,IAAY;IACpB;IACA,IAAIA,IAAI,GAAG,CAAC,IAAIA,IAAI,GAAG,CAAC,EAAE;MACxB,MAAM,IAAIC,KAAK,CAAC,gCAAgC,CAAC;;IAGnD;IACA,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACJ,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC;IAE5C;IACA,MAAMK,UAAU,GAAG,GAAG;IACtB,MAAMC,QAAQ,GAAG,GAAG;IACpB,MAAMC,SAAS,GAAG,GAAG;IAErB;IACA,MAAMC,WAAW,GAAGL,IAAI,CAACM,KAAK,CAACP,WAAW,CAAC;IAC3C,MAAMQ,WAAW,GAAGR,WAAW,GAAGM,WAAW,IAAI,GAAG;IACpD,MAAMG,UAAU,GAAG,CAAC,GAAGH,WAAW,IAAIE,WAAW,GAAG,CAAC,GAAG,CAAC,CAAC;IAE1D;IACA,IAAIE,QAAQ,GAAGP,UAAU,CAACQ,MAAM,CAACL,WAAW,CAAC;IAC7C,IAAIE,WAAW,EAAE;MACfE,QAAQ,IAAIN,QAAQ;;IAEtBM,QAAQ,IAAIL,SAAS,CAACM,MAAM,CAACF,UAAU,CAAC;IAExC,OAAOC,QAAQ;EACjB;;AA5BWd,eAAe,C;mBAAfA,eAAe;AAAA;AAAfA,eAAe,C;;QAAfA,eAAe;EAAAgB,IAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}