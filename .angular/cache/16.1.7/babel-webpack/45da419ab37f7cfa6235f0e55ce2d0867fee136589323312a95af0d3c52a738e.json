{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AppService {\n  constructor(http) {\n    this.http = http;\n    this.appList = [];\n    this.categoryList = [{\n      name: 'Select a category'\n    }];\n    this.apiKey = 'AqMQlc7cdUXBxx75V8ssnaWtYszGfnii';\n    this.serviceUrl = 'https://api.giphy.com/v1/gifs';\n  }\n  searchAppByKey(key) {\n    if (key.length === 0) return;\n    const params = new HttpParams().set('api_key', this.apiKey).set('limit', '10').set('q', key);\n    this.http.get(`${this.serviceUrl}/search`, {\n      params\n    }).subscribe(resp => {\n      this.appList = resp.data;\n      console.log({\n        gifs: this.appList\n      });\n    });\n  }\n  fetchCategories() {\n    this.http.get(`https://jsonplaceholder.typicode.com/users`).subscribe(resp => {\n      this.categoryList = resp.data;\n      console.log({\n        categories: this.categoryList\n      });\n    });\n  }\n}\nAppService.ɵfac = function AppService_Factory(t) {\n  return new (t || AppService)(i0.ɵɵinject(i1.HttpClient));\n};\nAppService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AppService,\n  factory: AppService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpParams","AppService","constructor","http","appList","categoryList","name","apiKey","serviceUrl","searchAppByKey","key","length","params","set","get","subscribe","resp","data","console","log","gifs","fetchCategories","categories","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/jacobovasquez/javz/amazon-store/fe-store/src/app/gallery/service/app.service.ts"],"sourcesContent":["import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppService {\n\n  public appList: any[] = [];\n  public categoryList: any[] = [{name: 'Select a category'}];\n\n  private apiKey:       string = 'AqMQlc7cdUXBxx75V8ssnaWtYszGfnii';\n  private serviceUrl:   string = 'https://api.giphy.com/v1/gifs';\n  constructor( private http: HttpClient ) { }\n\n\n  searchAppByKey( key: string ):void {\n    if ( key.length === 0 ) return;\n\n    const params = new HttpParams()\n      .set('api_key', this.apiKey )\n      .set('limit', '10' )\n      .set('q', key )\n\n    this.http.get<any>(`${ this.serviceUrl }/search`, { params })\n      .subscribe( resp => {\n\n        this.appList = resp.data;\n        console.log({ gifs: this.appList });\n\n      });\n\n\n\n\n\n\n  }\n  \n  fetchCategories():void {\n\n    this.http.get<any>(`https://jsonplaceholder.typicode.com/users`)\n      .subscribe( resp => {\n\n        this.categoryList = resp.data;\n        console.log({ categories: this.categoryList });\n\n      });\n\n  }\n}\n"],"mappings":"AAAA,SAAqBA,UAAU,QAAQ,sBAAsB;;;AAM7D,OAAM,MAAOC,UAAU;EAOrBC,YAAqBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IALlB,KAAAC,OAAO,GAAU,EAAE;IACnB,KAAAC,YAAY,GAAU,CAAC;MAACC,IAAI,EAAE;IAAmB,CAAC,CAAC;IAElD,KAAAC,MAAM,GAAiB,kCAAkC;IACzD,KAAAC,UAAU,GAAa,+BAA+B;EACpB;EAG1CC,cAAcA,CAAEC,GAAW;IACzB,IAAKA,GAAG,CAACC,MAAM,KAAK,CAAC,EAAG;IAExB,MAAMC,MAAM,GAAG,IAAIZ,UAAU,EAAE,CAC5Ba,GAAG,CAAC,SAAS,EAAE,IAAI,CAACN,MAAM,CAAE,CAC5BM,GAAG,CAAC,OAAO,EAAE,IAAI,CAAE,CACnBA,GAAG,CAAC,GAAG,EAAEH,GAAG,CAAE;IAEjB,IAAI,CAACP,IAAI,CAACW,GAAG,CAAM,GAAI,IAAI,CAACN,UAAW,SAAS,EAAE;MAAEI;IAAM,CAAE,CAAC,CAC1DG,SAAS,CAAEC,IAAI,IAAG;MAEjB,IAAI,CAACZ,OAAO,GAAGY,IAAI,CAACC,IAAI;MACxBC,OAAO,CAACC,GAAG,CAAC;QAAEC,IAAI,EAAE,IAAI,CAAChB;MAAO,CAAE,CAAC;IAErC,CAAC,CAAC;EAON;EAEAiB,eAAeA,CAAA;IAEb,IAAI,CAAClB,IAAI,CAACW,GAAG,CAAM,4CAA4C,CAAC,CAC7DC,SAAS,CAAEC,IAAI,IAAG;MAEjB,IAAI,CAACX,YAAY,GAAGW,IAAI,CAACC,IAAI;MAC7BC,OAAO,CAACC,GAAG,CAAC;QAAEG,UAAU,EAAE,IAAI,CAACjB;MAAY,CAAE,CAAC;IAEhD,CAAC,CAAC;EAEN;;AA3CWJ,UAAU,C;mBAAVA,UAAU,EAAAsB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAVzB,UAAU,C;SAAVA,UAAU;EAAA0B,OAAA,EAAV1B,UAAU,CAAA2B,IAAA;EAAAC,UAAA,EAFT;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}